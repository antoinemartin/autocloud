apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
  labels:
    app.kubernetes.io/name: "cloudflared"
data:
  config.yaml: |
    tunnel: ca955c21-2606-4a5d-b217-341a3d12755e
    credentials-file: /credentials/credentials.json
    ingress:
    - hostname: "*.mydomain.net"
      service: http://traefik.traefik.svc:80
    - service: http_status:404
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflared
  labels:
    app.kubernetes.io/name: "cloudflared"
type: Opaque
stringData:
  credentials.json: |
    {"AccountTag":"","TunnelSecret":"","TunnelID":"84857ed2-8b07-461a-a4eb-486409328bce"}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: "cloudflared"
  name: cloudflared
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: cloudflared
  template:
    metadata:
      labels:
        pod: cloudflared
    spec:
      volumes:
        - name: config
          configMap:
            name: cloudflared
        - name: credentials
          secret:
            secretName: cloudflared
      containers:
        - command:
            - cloudflared
            - tunnel
            # In a k8s environment, the metrics server needs to listen outside the pod it runs on.
            # The address 0.0.0.0:2000 allows any pod in the namespace.
            - --metrics
            - 0.0.0.0:2000
            - --config
            - /etc/cloudflared/config.yaml
            - run
          image: cloudflare/cloudflared:latest
          imagePullPolicy: Always
          name: cloudflared
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared
            - name: credentials
              mountPath: /credentials
